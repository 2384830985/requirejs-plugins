# RequireJS plugins

Small set of plugins for [RequireJS](http://requirejs.org). Some plugins may
also work on other AMD loaders (never tested it).

For more plugins check [RequireJS Wiki](https://github.com/jrburke/requirejs/wiki/Plugins).



## Plugins

 - **async** : Useful for JSONP and asynchronous dependencies (e.g. Google Maps).
 - **goog** : Load Google APIs asynchronously (requires `async!` plugin).
 - **image** : Load image files as dependencies. Option to "cache bust".
 - **json** : Load JSON files and parses the result. (Requires `text!` plugin).
 - **noext** : Load scripts without appending ".js" extension, useful for
   dynamic scripts.



## Documentation

check the `examples` folder. All the info you probably need will be inside
comments or on the example code itself.



## Basic usage

Put the plugins inside the `baseUrl` folder (usually same folder as the main.js
file) or create an alias to the plugin location:

```js
require.config({
    paths : {
        //create alias to plugins
        async: 'lib/requirejs-plugins/async',
        goog: 'lib/requirejs-plugins/goog',
        image: 'lib/requirejs-plugins/image',
        json: 'lib/requirejs-plugins/json',
        noext: 'lib/requirejs-plugins/noext'
    }
});

//use plugins as if they were at baseUrl
define([
        'image!awsum.jpg',
        'json!data/foo.json'
        'noext!js/bar.php'
        'async!http://maps.google.com/maps/api/js?sensor=false',
        'goog!visualization,1,[corechart,geochart]',
        'goog!search,1'
    ], function(awsum, foo, bar){
        //all dependencies are loaded (including gmaps and other google apis)
    }
);
```


## Writing your own plugins

Check [RequireJS documentation](http://requirejs.org/docs/plugins.html) for
a basic reference and use other plugins as reference. RequireJS official
plugins are a good source for learning.

Also be sure to check [RequireJS Wiki](https://github.com/jrburke/requirejs/wiki/Plugins).



## Author

[Miller Medeiros](http://blog.millermedeiros.com/)



## License

All the plugins are released under the [WTFPL](http://sam.zoy.org/wtfpl/).
